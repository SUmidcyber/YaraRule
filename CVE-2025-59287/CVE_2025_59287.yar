rule CVE_2025_59287 
{
    meta:
        description = "Detects CVE-2025-59287 WSUS deserialization exploit attempts"
        author = "Siber Guvenlik Analisti"
        date = "2025-10-24"
        reference = "CVE-2025-59287"
        severity = "Critical"
        threat_level = "High"
        link = "https://www.cve.org/CVERecord?id=CVE-2025-59287"
    strings:
        // WSUS SERVİS STRING'LERİ
        $wsus_servis1 = "Windows Server Update Services"  nocase ascii
        $wsus_servis2 = "UptadeServices"  nocase ascii
        $wsus_servis3 = "WSUSService" nocase ascii
        $wsus_servis4 = "Microsoft.UpdateServices" nocase ascii
        $wsus_servis5 = "SoftwareDistribution"  nocase  ascii
        $wsus_servis6 = "WSUSContent"  nocase ascii
        $wsus_servis7 = "WSUSAdmin"  nocase ascii

        // NETWORK & PORT BİLGİLERİ
        $port1 = ":8530" nocase
        $port2 = ":8531" nocase
        $port3 = "8530" wide
        $port4 = "8531" wide
        $Network_api1 = "ClientWebService" nocase wide
        $Network_api2 = "SimpleAuthWebService" nocase wide
        $Network_api3 = "DssAuthWebService" nocase wide
        $Network_api4 = "ServerSyncWebService" nocase wide
        $Network_api5 = "APIRemoting30" nocase wide
        $network_keywords = "WebClient|HttpRequest|DownloadData" nocase
        $file_operations = "File.Write|FileStream|System.IO" nocase
        $process_calls = "Process.Start|WinExec|System.Diagnostics" nocase

        // DESERIALIZATION METHODLARI
        $deserialize1 = "Deserialize" nocase
        $deserialize2 = "UnsafeDeserialize" nocase
        $deserialize3 = "DeserializeFromStream" nocase
        $deserialize4 = "FromBinary" nocase
        $deserialize5 = "FromXml" nocase
        $get_object = "GetObjectData" nocase
        
        // Şüpheli pattern'ler
        $binary_formatter = "BinaryFormatter" nocase
        $memory_stream = "MemoryStream" nocase
        $serializable = "[Serializable]" ascii

    condition:
        // Wsus Servisi Senaryo 1
        (2 of ($wsus_servis*)) or
        ($wsus_servis1 and $wsus_servis4 and 2 of ($port*)) or
        ($wsus_servis1 and $wsus_servis4 ) or

        // NETWORK & PORT BİLGİLERİ Senaryo 2
        (2 of ($Network_api*)) or
        (2 of ($Network_api*) and all of ($port*)) or

        // DESERIALIZATION METHODLARI ve Şüpheli pattern'ler Senaryo 3
        (3 of ($deserialize*)) or
        (2 of ($deserialize*) and 2 of ($binary_formatter, $memory_stream, $serializable, $get_object)) or
        (1 of ($binary_formatter, $memory_stream, $serializable)) or
        (1 of ($network_keywords, $file_operations, $process_calls)) 
}

rule Serialization_riski_siniflar {
    meta:
        KEY = "SERIALIZATION RİSKLİ SINIFLAR"
    strings:
        $serialization1 = "BinaryFormatter" nocase
        $serialization2 = "SoapFormatter" nocase
        $serialization3 = "ObjectStateFormatter" nocase
        $serialization4 = "LosFormatter" nocase
        $serialization5 = "NetDataContractSerializer" nocase
        $serialization6 = "ISerializable" nocase
        $serialization7 = "IObjectReference" nocase
        $serialization8 = "JavaScriptSerializer" nocase
        $serialization9 = "DataContractSerializer" nocase
        $serialization10 = "XmlSerializer" nocase
        $serialization11 = "SerializationBinder" nocase


    condition:
        // SERIALIZATION RİSKLİ SINIFLAR Senayo 1
        (1 of ($serialization*)) and
        (filesize < 2MB) or
        (any of ($serialization*))
        
}

rule soap_web_servis_pattern {
    meta:
        description = "Soap ve Web servis patternleri"
    strings:
        $web_service_pattern1 = "SOAPAction" nocase ascii
        $web_service_pattern2 = "soap:Body" nocase ascii
        $web_service_pattern3 = "soap:Envelope" nocase ascii
        $web_service_pattern4 = "text/xml" nocase ascii
        $web_service_pattern5 = "application/soap+xml" nocase ascii
        $web_service_pattern6 = "WsSecurity" nocase ascii
        $web_service_pattern7 = "WS-Addressing" nocase ascii

    condition:
        // Soap ve Web servis patternleri Senaryo 1
        (1 of ($web_service_pattern*)) or
        (any of ($web_service_pattern*))
}

rule API_endpoint_yollar {
    meta:
        description = "API & ENDPOINT YOLLARI"
    strings:
        $api_end1 = "/ClientWebService/client.asmx" wide nocase
        $api_end2 = "/SimpleAuthWebService/SimpleAuth.asmx" wide nocase
        $api_end3 = "/DssAuthWebService/DssAuth.asmx" wide nocase
        $api_end4 = "/ServerSyncWebService/ServerSync.asmx" wide nocase
        $api_end5 = "/APIRemoting30/Service.asmx" wide nocase
        $api_end6 = "/Content" wide nocase 
        $api_end7 = "/ApiRemoting30" wide nocase

        // Exploit Pattern'leri
        $exploit1 = "GetUpdate" wide nocase
        $exploit2 = "GetUpdateData" wide nocase
        $exploit3 = "GetUpdateContents" wide nocase
        $exploit4 = "GetAuthorizationCookie" wide nocase
        $exploit5 = "Serialize" wide nocase
        $exploit6 = "Deserialize" wide nocase


        // WSUS Config Dosya Yolları
        $config1 = "Web.config" wide nocase
        $config2 = "ServicesSettings.xml" wide nocase
        $config3 = "WSUSConfig.xml" wide nocase
        $config4 = "SoftwareDistribution" wide nocase

        // HTTP Method & Header'lar
        /* 
        $http1 = "SOAPAction" wide nocase
        $http2 = "Content-Type: text/xml" wide nocase
        $http3 = "POST /ClientWebService" wide nocase
        */

    condition:
        // API Endpoint yollari senaryo 1
        (2 of ($api_end*)) or
        (1 of ($api_end*) and 1 of ($exploit*)) or
        (1 of ($api_end*) and 1 of ($config*))
}

rule Exploit_spesifik_patternleri {
    meta:
        description = "EXPLOIT SPESİFİK PATTERN'LER"
    strings:
        // Exploit Spesifikleri
        $exploits1 = "TypeConfusion" nocase
        $exploits2 = "MemoryCorruption" nocase
        $exploits3 = "UseAfterFree" nocase
        $exploits4 = "BufferOverflow" nocase
        $exploits5 = "ArbitraryCodeExecution" nocase
        $exploits6 = "RemoteCodeExecution" nocase

        // SERIALIZATION PATTERN'LERİ
        $ser1 = "AAEAAAD" wide  // .NET serialization
        $ser2 = "System.Collections.Generic.Dictionary" wide nocase
        $ser3 = "System.Delegate" wide nocase


    condition:
        // CRITICAL: API + Serialization + Payload kombinasyonu Senaryo 1
        ($exploits1 and $exploits2 and 2 of ($ser*)) or
        // Senaryo 2
        (1 of ($exploits*)) or
        // Senaryo 3
        (any of ($exploits*))
}

rule File_Process_isimleri_supheli_aktiviteler {
    meta:
        description = "FILE & PROCESS İSİMLER VE SUPHELI AKTIVITELER"
    strings:
        $file_name1 = "wsusservice.exe" nocase
        $file_name2 = "iisexpress.exe" nocase
        $file_name3 = "w3wp.exe" nocase
        $file_name4 = "UpdateServices.config" nocase
        $file_name5 = "WSUS.mdf" nocase
        $file_name6 = "SUL.ldf" nocase


    condition:
        (1 of ($file_name*)) or
        ($file_name1 and $file_name2 and 1 of ($file_name4))
}


rule Net_assembly_referanslari_supheli_durumlar {
    meta:
        descreption = ".NET ASSEMBLY REFERANSLARI SUPHELI DURUMLAR"
    strings:
        $net_ass1 = "Microsoft.UpdateServices.Administration" wide ascii
        $net_ass2 = "Microsoft.UpdateServices.Internal" wide ascii
        $net_ass3 = "Microsoft.UpdateServices.Internal.BaseApi" wide ascii
        $net_ass4 = "System.Runtime.Serialization" wide ascii
        $net_ass5 = "System.Web.Services" wide ascii



    condition:
        (1 of ($net_ass*)) or
        (any of ($net_ass*))
}

rule database_content_pattern_aktiviteleri {
    meta:
        descriptions = "DATABASE & CONTENT PATTERN'LER AKTIVITILERI"
    strings:

        // EXPLOIT-SPESIFIC DATABASE METHODLARI
        $exploit_db1 = "GetUpdateData" wide nocase
        $exploit_db2 = "GetAuthorizationCookie" wide nocase
        
        // SERIALIZATION IN DATABASE CONTEXT
        $ser_in_db1 = "BinaryFormatter" wide nocase
        $ser_in_db2 = "Deserialize" wide nocase
        $ser_in_db3 = "FromBinary" wide nocase
        
        // SUSPICIOUS PAYLOAD IN DB METHODS
        $payload1 = "System.Diagnostics.Process" wide nocase
        $payload2 = "Assembly.Load" wide nocase

    condition:
        // Kritik kombinasyon: DB method + Serialization + Payload Senaryo 1
        (($exploit_db1 or $exploit_db2) and 
         2 of ($ser_in_db*) and 
         1 of ($payload*)) 
}

rule Guvelik_Auth_Pattern_sorunlari {
    meta:
        description = "GÜVENLİK & AUTH PATTERN'LERİ"
    strings:
        // Guvenlik AUTH PATTERN sorunlari
        $auth1 = "Windows-Update-Agent" nocase
        $auth2 = "Microsoft-CryptoAPI" nocase
        $auth3 = "AuthorizationCookie" nocase
        $auth4 = "ServerSyncAuthorizationCookie" nocase
        $auth5 = "SimpleWebToken" nocase
    condition:
        ($auth1 and $auth3 and 1 of ($auth4)) or
        (any of ($auth*)) or
        (1 of ($auth*))
}

rule Configuration_ayarlari {
    meta:
        description = "CONFIGURATION AYARLARI"
    strings:
        // EXPLOIT-RELATED CONFIG
        $exploit_config1 = "UseCustomWebsite" wide nocase
        $exploit_config2 = "ContentLocal" wide nocase
        $exploit_config3 = "ProxyMode" wide nocase
        
        // SERIALIZATION SECURITY CONFIG
        $ser_config1 = "SerializationBinder" wide nocase
        $ser_config2 = "TypeCheck" wide nocase
        $ser_config3 = "AllowUntrusted" wide nocase
        $ser_config4 = "ValidateInput" wide nocase
        
        // WEB SERVICE CONFIG
        $ws_config1 = "Web.config" wide nocase
        $ws_config2 = "servicesettings.xml" wide nocase
        $ws_config3 = "machine.config" wide nocase
        
        // DANGEROUS SETTINGS
        $danger_config1 = "maxRequestLength" wide nocase
        $danger_config2 = "executionTimeout" wide nocase
        $danger_config3 = "allowRemote" wide nocase


    condition:
        // Kritik exploit kombinasyonu
        (2 of ($exploit_config*) and 2 of ($ser_config*)) or
        
        // Configuration + Dangerous settings
        (1 of ($exploit_config*) and 2 of ($danger_config*)) or
        
        // Web config + Serialization güvenlik açığı
        ($ws_config1 and 2 of ($ser_config*)) or

        (any of ($ws_config*))

}

rule ShellCode_memory {
    meta:
        description = "SHELLCODE MEMORY"
    strings:
        // ========================
        // 1. SHELLCODE PATTERN'LER
        // ========================
        
        // NOP SLED & PADDING
        $sc_nop1 = { 90 90 90 90 }                    // NOP sled
        $sc_nop2 = { 90 90 90 90 90 90 90 90 }       // Uzun NOP sled
        $sc_nop3 = { 66 90 }                          // Alternative NOP
        
        // CALL INSTRUCTIONS
        $sc_call1 = { FF D0 }                         // CALL EAX
        $sc_call2 = { FF D1 }                         // CALL ECX  
        $sc_call3 = { FF D2 }                         // CALL EDX
        $sc_call4 = { FF D3 }                         // CALL EBX
        $sc_call5 = { FF D4 }                         // CALL ESP
        $sc_call6 = { FF D5 }                         // CALL EBP
        $sc_call7 = { FF D6 }                         // CALL ESI
        $sc_call8 = { FF D7 }                         // CALL EDI
        $sc_call9 = { E8 ?? ?? ?? ?? }                // CALL relative
        $sc_call10 = { FF 15 ?? ?? ?? ?? }            // CALL absolute
        
        // RETURN INSTRUCTIONS
        $sc_ret1 = { C3 }                             // RET
        $sc_ret2 = { C2 ?? ?? }                       // RET with pop
        $sc_ret3 = { CB }                             // RETF
        
        // JUMP INSTRUCTIONS
        $sc_jmp1 = { FF E0 }                          // JMP EAX
        $sc_jmp2 = { FF E1 }                          // JMP ECX
        $sc_jmp3 = { FF E2 }                          // JMP EDX
        $sc_jmp4 = { FF E3 }                          // JMP EBX
        $sc_jmp5 = { E9 ?? ?? ?? ?? }                 // JMP relative
        $sc_jmp6 = { EB ?? }                          // JMP short
        
        // PUSH & POP PATTERNS
        $sc_push1 = { 68 ?? ?? ?? ?? C3 }             // PUSH; RET
        $sc_push2 = { 6A ?? C3 }                      // PUSH byte; RET
        
        // SHELLCODE STUBS
        $sc_stub1 = { 33 C0 40 C3 }                   // XOR EAX,EAX; INC EAX; RET
        $sc_stub2 = { 33 C0 C3 }                      // XOR EAX,EAX; RET
        $sc_stub3 = { 8B FF 55 8B EC }                // MOV EDI,EDI; PUSH EBP; MOV EBP,ESP
        
        // METASPLOIT PATTERN'LER
        $msf1 = { 89 e5 83 ec }                       // Metasploit prologue
        $msf2 = { 81 ec ?? ?? ?? ?? }                 // Metasploit stack adjustment
        
        // ========================
        // 2. WSUS API PATTERN'LER
        // ========================
        $api1 = "/ClientWebService/client.asmx" wide nocase
        $api2 = "GetUpdateData" wide nocase
        $api3 = "SoftwareDistribution" wide nocase
        
        // ========================
        // 3. SERIALIZATION PATTERN'LER
        // ========================
        $ser1 = "AAEAAAD" wide                        // Base64 .NET serialization
        $ser2 = "System.Collections.Generic.Dictionary" wide nocase
        $ser3 = "BinaryFormatter" wide nocase
        
        // ========================
        // 4. EXPLOIT PAYLOAD PATTERN'LER
        // ========================
        $payload1 = "System.Diagnostics.Process" wide nocase
        $payload2 = "Assembly.Load" wide nocase

    condition:
        // CRITICAL: Shellcode + WSUS API kombinasyonu
        (3 of ($sc_*) and 2 of ($api*)) or
        
        // CRITICAL: Shellcode + Serialization
        (3 of ($sc_*) and 2 of ($ser*)) or
        
        // HIGH: Metasploit pattern + WSUS
        (($msf1 or $msf2) and 2 of ($api*)) or
        
        // HIGH: Multiple shellcode instructions
        (5 of ($sc_*)) or
        
        // MEDIUM: WSUS API + Serialization (temel exploit)
        (2 of ($api*) and 2 of ($ser*)) or
        
        // Shellcode density detection
        (uint16(0) == 0x5A4D and 4 of ($sc_*)) or // PE header + shellcode

        (any of ($payload*))
}